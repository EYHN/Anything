import fs from 'fs';
import path from 'path';
import { MetadataSchema } from '../metadata';
import messages from './messages.json';
import { MimetypeSchema } from '../mimetype';

function getMetadataMessageIds() {
  const messageIds = new Set<string>();

  for (const metadataId of Object.keys(MetadataSchema)) {
    const parts = metadataId.split('.');
    parts.reduce((prev, part) => {
      const id = prev ? prev + '.' + part : part;
      messageIds.add('Metadata.' + id);
      return id;
    }, '');
    messageIds.add('Metadata.' + metadataId + '.Value');
  }

  return messageIds;
}

type Msg = string | { references?: ReadonlyArray<string>; id: string };

const msgs: Msg[] = [
  ...messages,
  ...Array.from(getMetadataMessageIds()),
  ...MimetypeSchema.map((mimetype) => ({
    references: 'references' in mimetype ? mimetype.references : [],
    id: `MimeType:${mimetype.mime}`,
  })),
  'MimeType:other',
];

function generatePOItem(msg: Msg) {
  const pomsg = typeof msg === 'string' ? { id: msg } : msg;
  return (pomsg.references?.map((ref) => `#: ${ref}\n`).join('') ?? '') + `msgid "${pomsg.id}"\nmsgstr ""`;
}

function generateTypescriptItem(msg: Msg) {
  return typeof msg === 'string' ? msg : msg.id;
}

function generatePOFile() {
  return `# This file is automatically generated by @anything/shared, please do not modify this file.
msgid ""
msgstr ""
"POT-Creation-Date: 2021-06-05 00:51+0800\\n"
"Mime-Version: 1.0\\n"
"Content-Type: text/plain; charset=utf-8\\n"
"Content-Transfer-Encoding: 8bit\\n"
"Language: \\n"

${msgs.map(generatePOItem).join('\n\n')}
`;
}

function generateTypescriptFile() {
  return `/* This file is automatically generated by @anything/shared, please do not modify this file. */
/* eslint-disable */
export const LocaleMessages = ${JSON.stringify(msgs.map(generateTypescriptItem), undefined, 2)} as const;`;
}

if (!fs.existsSync(path.join(__dirname, './generated'))) {
  fs.mkdirSync(path.join(__dirname, './generated'));
}

fs.writeFileSync(path.join(__dirname, './generated/messages.pot'), generatePOFile());
fs.writeFileSync(path.join(__dirname, './generated/messages.ts'), generateTypescriptFile());
