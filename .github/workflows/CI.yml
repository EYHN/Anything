name: CI

on:
  - push

defaults:
  run:
    shell: bash

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
      - name: Check Codegen
        run: |
          pnpm codegen
          if ! git diff --no-ext-diff --exit-code --compact-summary HEAD ; then
            echo "The above files generated by the codegen are not up-to-date. Running \`pnpm codegen\` before commit."
            exit 1
          fi
      - name: Check
        run: |
          pnpm run check
          dotnet tool update -g dotnet-format
          dotnet format --no-restore --fix-analyzers warn --fix-style warn --check
  core:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-restore --no-build "/p:CollectCoverage=\"true\"" "/p:CoverletOutput=\"../../CoverageResults/\"" "/p:MergeWith=\"../../CoverageResults/coverage.json\"" "/p:CoverletOutputFormat=\"lcov,json\"" "/p:CopyLocalLockFileAssemblies=\"true\"" "-m:1"
      - uses: codecov/codecov-action@v1
        if: matrix.os == 'ubuntu-latest'
  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
      - name: Build
        run: pnpm run build
  deploy-preview:
    needs:
      - core
      - web
      - check
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v2
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
      - name: Build Debug
        run: |
          pnpm build
          dotnet build --configuration Debug
      - name: dotnet publish
        run: dotnet publish ./core/Anything/Anything.csproj -c Debug -o ${{env.DOTNET_ROOT}}/myapp
      - name: Run Azure webapp deploy action using publish profile credentials
        uses: azure/webapps-deploy@v2
        with:
          app-name: anything-preview
          slot-name: Production
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_775E702E062944F59077D80FDCD10CF8 }}
          package: ${{env.DOTNET_ROOT}}/myapp
